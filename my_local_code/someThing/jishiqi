
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity jishiqi is
	
	generic(
		
		sys_clk_fre_value:INTEGER:=50000000;
		div_clk_fre_value:INTEGER:=25000000
	);
		
	port(
		i_sys_clk:in STD_LOGIC;----系统时钟的输入
		i_sys_rst:in STD_LOGIC;----分频器的复位
		i_sys_clear:in STD_LOGIC;---计时的复位
		i_sys_stop:in STd_LOGIC;-----计时停止
		
		-------连接七段数码管，显示的数字00：01	
		o_guan_sss_shiwei:out STD_LOGIC_VECTOR(6 downto 0);
		o_guan_sss_ge_wei:out StD_LOGIC_VECTOR(6 downto 0);
		o_guan_min_shiwei:out StD_LOGIC_VECTOR(6 downto 0);
		o_guan_min_ge_wei:out StD_LOGIC_VECTOR(6 downto 0);
			
		------调试的小时和分钟的个位和十位
		t_sss_shiwei:out STD_LOGIC_VECTOR(3 downto 0);
		t_sss_ge_wei:out STD_LOGIC_VECTOR(3 downto 0);
		t_min_shiwei:out STD_LOGIC_VECTOR(3 downto 0);
		t_min_ge_wei:out STD_LOGIC_VECTOR(3 downto 0);
			
		------分频器的调试输出
		t_div_clk:out STD_LOGIC;
		-----整点报时的输出
		o_zhengdianbaoshi:out STD_LOGIC
	);
end entity jishiqi;

architecture behave of jishiqi is
		
	----计时器的中端信号
	signal r_sss_shiwei:STD_LOGIC_VECTOR(3 downto 0);
	signal r_sss_ge_wei:STD_LOGIC_VECTOR(3 downto 0);
	signal r_min_shiwei:STD_LOGIC_VECTOR(3 downto 0);
	signal r_min_ge_wei:STD_LOGIC_VECTOR(3 downto 0);
	------数码管的中端信号
	signal r_guan_sss_shiwei:STD_LOGIC_VECTOR(6 downto 0);
	signal r_guan_sss_ge_wei:STD_LOGIC_VECTOR(6 downto 0);
	signal r_guan_min_shiwei:STD_LOGIC_VECTOR(6 downto 0);
	signal r_guan_min_ge_wei:STD_LOGIC_VECTOR(6 downto 0);
	
	-----暂存分频器的计数
	signal r_div_count:STD_LOGIC_VECTOR(31 downto 0);
	-----暂存分频器的输出
	signal r_div_clk:STD_LOGIC;
	
	--------------分频器将系统时钟分频到需要的时钟
	begin
	process(i_sys_clk,i_sys_rst)
		begin	
			if(i_sys_rst='1')then	
				r_div_count<=x"00000000";
				r_div_clk<='0';
			elsif(i_sys_clk'event AND i_sys_clk='1')then
				if(r_div_count=sys_clk_fre_value/div_clk_fre_value/2-1)then
					r_div_count<=x"00000000";
					r_div_clk<=NOT r_div_clk;
			else 
				r_div_count <= r_div_count+1;
			end if;
		end if;
	end process;
	t_div_clk<=r_div_clk;
	
	process(i_sys_clear,r_div_clk)
		begin	
			if(i_sys_clear='1')then	
				r_sss_ge_wei<="0000";
				r_sss_shiwei<="0000";
				r_min_ge_wei<="0000";
				r_min_shiwei<="0000";
			elsif(r_div_clk'event and r_div_clk='1')then
				if(i_sys_stop='1')then
					r_sss_ge_wei<=r_sss_ge_wei;
					r_sss_shiwei<=r_sss_shiwei;
					r_min_ge_wei<=r_min_ge_wei;
					r_min_shiwei<=r_min_shiwei;
				else
					r_sss_ge_wei<=r_sss_ge_wei+1;
					if(r_sss_ge_wei="1001")then
						r_sss_ge_wei<="0000";
						r_sss_shiwei<=r_sss_shiwei+1;
						if(r_sss_shiwei="0101" and r_sss_ge_wei="1001")then
							r_sss_shiwei<="0000";
							r_min_ge_wei<=r_min_ge_wei+1;
							if(r_min_ge_wei="1001")then
								r_min_ge_wei<="0000";
								r_min_shiwei<=r_min_shiwei+1;
							end if;
						end if;
					end if;
				end if;
			end if;
			----设置的正分钟报时，报时时间为3s
			if(r_sss_ge_wei="0000" and r_sss_shiwei="0000" and i_sys_clear='0')then
				o_zhengdianbaoshi<='1';
			elsif(r_sss_ge_wei="0001" and r_sss_shiwei="0000" and i_sys_clear='0')then
				o_zhengdianbaoshi<='1';
			elsif(r_sss_ge_wei="0010" and r_sss_shiwei="0000" and i_sys_clear='0')then
				o_zhengdianbaoshi<='1';
			elsif(r_sss_ge_wei="0011" and r_sss_shiwei="0000" and i_sys_clear='0')then
				o_zhengdianbaoshi<='1';
			else
				o_zhengdianbaoshi<='0';
			end if;
			-------将暂存的变量值给调试的变量
			t_sss_ge_wei<=r_sss_ge_wei;
			t_sss_shiwei<=r_sss_shiwei;
			t_min_ge_wei<=r_min_ge_wei;
			t_min_shiwei<=r_min_shiwei;
			------将四位的变量映射到数码管
			if(i_sys_clear='1')then
				r_guan_sss_ge_wei<="1000000";
			else	
				case r_sss_ge_wei is
					when "0000" =>r_guan_sss_ge_wei <="1000000";
					when "0001" =>r_guan_sss_ge_wei <="1111001";
					when "0010" =>r_guan_sss_ge_wei <="0100100";
					when "0011" =>r_guan_sss_ge_wei <="0110000";
					when "0100" =>r_guan_sss_ge_wei <="0011001";
					when "0101" =>r_guan_sss_ge_wei <="0010010";
					when "0110" =>r_guan_sss_ge_wei <="0000010";
					when "0111" =>r_guan_sss_ge_wei <="1111000";
					when "1000" =>r_guan_sss_ge_wei <="0000000";
					when "1001" =>r_guan_sss_ge_wei <="0010000";
					when others =>r_guan_sss_ge_wei <="1111111";
				end case;
			end if;
			o_guan_sss_ge_wei<=r_guan_sss_ge_wei;
			
			if(i_sys_clear='1')then
				r_guan_sss_shiwei<="1000000";
			else	
				case r_sss_shiwei is
					when "0000" =>r_guan_sss_shiwei <="1000000";
					when "0001" =>r_guan_sss_shiwei <="1111001";
					when "0010" =>r_guan_sss_shiwei <="0100100";
					when "0011" =>r_guan_sss_shiwei <="0110000";
					when "0100" =>r_guan_sss_shiwei <="0011001";
					when "0101" =>r_guan_sss_shiwei <="0010010";
					when "0110" =>r_guan_sss_shiwei <="0000010";
					when "0111" =>r_guan_sss_shiwei <="1111000";
					when "1000" =>r_guan_sss_shiwei <="0000000";
					when "1001" =>r_guan_sss_shiwei <="0010000";
					when others =>r_guan_sss_shiwei <="1111111";
				end case;
			end if;
			o_guan_sss_shiwei<=r_guan_sss_shiwei;
			
			if(i_sys_clear='1')then
				r_guan_min_ge_wei<="1000000";
			else	
				case r_min_ge_wei is
					when "0000" =>r_guan_min_ge_wei <="1000000";
					when "0001" =>r_guan_min_ge_wei <="1111001";
					when "0010" =>r_guan_min_ge_wei <="0100100";
					when "0011" =>r_guan_min_ge_wei <="0110000";
					when "0100" =>r_guan_min_ge_wei <="0011001";
					when "0101" =>r_guan_min_ge_wei <="0010010";
					when "0110" =>r_guan_min_ge_wei <="0000010";
					when "0111" =>r_guan_min_ge_wei <="1111000";
					when "1000" =>r_guan_min_ge_wei <="0000000";
					when "1001" =>r_guan_min_ge_wei <="0010000";
					when others =>r_guan_min_ge_wei <="1111111";
				end case;
			end if;
			o_guan_min_ge_wei<=r_guan_min_ge_wei;
			
			if(i_sys_clear='1')then
				r_guan_min_shiwei<="1000000";
			else	
				case r_min_shiwei is
					when "0000" =>r_guan_min_shiwei <="1000000";
					when "0001" =>r_guan_min_shiwei <="1111001";
					when "0010" =>r_guan_min_shiwei <="0100100";
					when "0011" =>r_guan_min_shiwei <="0110000";
					when "0100" =>r_guan_min_shiwei <="0011001";
					when "0101" =>r_guan_min_shiwei <="0010010";
					when "0110" =>r_guan_min_shiwei <="0000010";
					when "0111" =>r_guan_min_shiwei <="1111000";
					when "1000" =>r_guan_min_shiwei <="0000000";
					when "1001" =>r_guan_min_shiwei <="0010000";
					when others =>r_guan_min_shiwei <="1111111";
				end case;
			end if;
			o_guan_min_shiwei<=r_guan_min_shiwei;
		end process;
end architecture behave;
							
							
							
							
							
							
						
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				




